name: PHP Composer

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Fix code style
      run: composer style:fix

    - name: Check remaining code style
      run: composer test:style

    - name: Cache coverage results
      uses: actions/cache@v3
      with:
          path: coverage.xml
          key: ${{ runner.os }}-php-${{ hashFiles('coverage.xml') }}

    - name: Run tests with coverage
      run: XDEBUG_MODE=coverage vendor/bin/pest --configuration=phpunit.xml --coverage-clover=coverage.xml

    - name: Generate test coverage badge
      run: composer badge:coverage

    - name: Save coverage badge
      uses: actions/upload-artifact@v3
      with:
        name: coverage-badge
        path: dev/badges/coverage.svg
    - name: Commit badge
      run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add dev/badges/badge.svg
          git commit -m "Add/Update badge"
    - name: Push badge commit
      uses: ad-m/github-push-action@master
      with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.extract_branch.outputs.branch }}

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test
